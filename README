Introduction
============
This software is still in development, stay tuned.

This framework is intended to simply making agi applications. You will 
extend PAGIApplication and your signal handler, error handler, init, and
shutdown methods are automatically setup and called.

Please see docs/examples/quickstart for a very basic example. You'll need
something like this in your dialplan:

Checkout the api (phpdoc) at: http://marcelog.github.com/PAGI/php-doc/html/index.html

[default]
exten => 1,1,AGI(/tmp/PAGI/docs/examples/quickstart/run.sh,a,b,c,d)
exten => 1,n,Hangup

FastAGI
-------
You can use FastPAGI if you want to launch your applications using 
FastAGI: https://github.com/marcelog/FastPAGI

Currently there is no manual or comprehensive documentation, so please refer
to the examples, it's really all there (I will write the documentation as
soon as possible). Please contact me if you have any comments, doubts, or
any kind of feedback. Send an email to: marcelog@gmail.com

You may want to take a look at Ding https://github.com/marcelog/Ding if you're
interested in using DI, AOP, and other stuff in your telephony applications.

Note: The client accepts an array with options. The available options are:

log4php.properties => Optional. If set, should contain the absolute path to the
                      log4php.properties file.
stdin => Optional. If set, should contain an already open stream from where the
         client will read data (useful to make it interact with fastagi servers
         or even text files to mock stuff when testing). If not set, stdin will
         be used by the client.
stdout => Optional. Same as stdin but for the output of the client.
--------------------------------------------------------------------------------
Available via PEAR
------------------
You can now easily install PAGI by issuing:
# pear channel-discover pear.marcelog.name
# pear install marcelog/PAGI

or

# pear install marcelog/PAGI-1.8.2
just replace 1.8.2 by the release version you'd like to install :)
See: http://pear.marcelog.name/
--------------------------------------------------------------------------------
AutoDial
========
CallFiles are supported. You can also schedule a call in the future.
--------------------------------------------------------------------------------
Fax
===
Sending and receiving faxes is supported using spandsp (applications SendFax
and ReceiveFax).
--------------------------------------------------------------------------------
Available Facades
=================
PAGI\Client\CDR: Provided to access cdr variables.
PAGI\Client\ChannelVariables: Provided to access channel variables and asterisk
environment variables.
PAGI\Client\CallerID: Provided to access caller id variables.
PAGI\Client\Result: Provided to wrap up the result for agi commands.
PAGI\CallSpool\CallFile: Call file facade.
PAGI\CallSpool\CallSpool: Call spool facade.
PAGI\Logger\Asterisk: Provides access to asterisk logger (see logger.conf in your
asterisk installation).
--------------------------------------------------------------------------------
Results
=======
For every operation, a Result is provided. Some operations decorate this
Result to add functionality, like PlayResult, ReadResult, etc. For example,
a stream file will return a PlayResult, which decorates a ReadResult which 
in turn, decorated a Result.
* PAGI\Client\DialResult
* PAGI\Client\ExecResult
* PAGI\Client\ReadResult
* PAGI\Client\PlayResult
* PAGI\Client\FaxResult
--------------------------------------------------------------------------------
Debugging, logging
==================

You need log4php (http://logging.apache.org/log4php/). Just make sure you
copy it to the include_path and PAGI will pick it up from there (the 
directory src/main/php is the one that needs to be in the include_path).
--------------------------------------------------------------------------------
Developers
==========
* build.xml is a phing build file, not ant.
* It's very possible that you may need to edit build.properties.
* Available main targets: all, build, test, report.
* Tools run: phpdoc, phploc, phpcs, phpmd, phpcpd, phpdepend, phpunit.
--------------------------------------------------------------------------------
LICENSE
=======
Copyright 2011 Marcelo Gornstein <marcelog@gmail.com>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

